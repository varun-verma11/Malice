declare i32 @printf(i8*, ...)
@.printInt = private unnamed_addr constant [3 x i8] c"%i\00", align 1
@.str_0 = private unnamed_addr constant [3 x i8] c" \0A\00", align 1
define i32 @abs (i32 %x) nounwind uwtable {
	%1 = icmp slt i32 %x, 0
	br i1 %1, label %2, label %4
	;<label>:2
	%3 = sub nsw i32 0, %x
	ret i32 %3
	br label %6
	;<label>:4
	%5 = load i32* %x, align 4
	ret i32 %5
	;<label>:6
}

define void @hatta () nounwind uwtable {
	%x = alloca i32, align 4
	store i32 1, i32* %x, align 4
	%y = alloca i32, align 4
	%1 = sub nsw i32 0, 1
	store i32 %1, i32* %y, align 4
	%2 = load i32* @abs, align 4
	%3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.readInt, i32 0, i32 0), i32 %2)
	%4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str_0, i32 0, i32 0))
	%5 = load i32* @abs, align 4
	%6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.readInt, i32 0, i32 0), i32 %5)
	ret void 
}

define i32 @main () nounwind uwtable {
	call void @hatta
	ret i32 0
}

declare i32 @printf(i8*, ...)
